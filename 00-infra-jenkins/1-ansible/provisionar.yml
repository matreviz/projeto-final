- hosts: all
  become: true

  tasks:
    - name: "Roda: sudo apt-get update"
      become: yes
      apt:
        upgrade: yes
        update_cache: yes

    - name: "Configura hostname jenkins"
      shell: hostname projeto-jenkins && echo "projeto-jenkins" > /etc/hostname
      become: yes
    
    - name: "Download pacote jenkins"
      shell: wget -qO - https://pkg.jenkins.io/debian-stable/jenkins.io.key | apt-key add -

    - name: install packages required by docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg-agent
        - software-properties-common

    - name: add docker GPG key
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker apt repo
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: "Restart docker"
      shell: sudo systemctl restart docker
      become: yes

    - name: "Instala mvn"
      shell: "sudo apt install maven -y"

    - name: "Instala unzip"
      shell: "sudo apt install unzip -y"

    - name: "Instala awscli"
      shell: "apt install awscli -y"
      
    - name: "Instala java"
      shell: "apt install default-jdk -y"

    - name: "Instala ansible"
      shell: "sudo apt install ansible -y"

    # https://www.jenkins.io/doc/book/installing/linux/
    - name: "Add pacote jenkins"
      shell: sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'

    - name: "Install terraform passo 1"
      shell: sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl

    - name: "Install terraform passo 2"
      shell: curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -

    - name: "Install terraform passo 3"
      shell: sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"

    - name: "Install terraform passo 4"
      shell: sudo apt-get update && sudo apt-get install terraform -y
    
    - name: "Instala mysql"
      apt:
        name: "{{ item }}"
        state: latest
      become: yes # roda com sudo
      with_items:
        - mysql-server
        - python3-pycurl
        - python3-mysqldb
    
    - name: "Lavanta servi√ßo do mysql"
      become: yes
      service:
        name: mysql
        state: started

    # - name: "Criando senha teste mysql"
    #   become: yes
    #   mysql_user:
    #     name: root
    #     host: localhost
    #     password: root
    #     priv: "*.*:ALL,GRANT"
    #     state: present
  
    - name: "Cria o banco de dados MySQL"
      mysql_db:
        name: SpringWebYoutubeTest
        login_user: root
        login_password: root
        state: present

    - name: "clone projeto"
      ansible.builtin.git:
        repo: 'https://github.com/torneseumprogramador/spring-web-youtube'
        dest: /home/ubuntu/spring-web-youtube
        clone: yes
        update: yes

    - name: "Instala jenkins"
      shell: "apt-get install jenkins -y"

    - name: Espera 30 segundos
      wait_for: timeout=30

    - name: Copia chave private
      copy:
        src: "/home/ubuntu/.ssh/treinamentoitau_mauricio2.pem"
        dest: "/var/lib/jenkins/treinamentoitau_mauricio2.pem"
        owner: jenkins
        group: jenkins
        mode: '0400'

    - shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: ps
    - debug:
        msg: "Segredo do jenkins: '{{ ps.stdout_lines }}' "
        # msg: "Segredo do jenkins: '{{ ps.stderr_lines }}' " # quando quiser ver o erro